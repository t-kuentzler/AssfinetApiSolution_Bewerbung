// <auto-generated />
using System;
using Assfinet.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assfinet.Shared.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240806145719_DeletedUnfSparteTables")]
    partial class DeletedUnfSparteTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Assfinet.Shared.Entities.DepSparte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AmsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Amsidnr")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTimeOffset?>("Bearbeitet")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DEP101")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP111")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP113")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP115")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP116")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP119")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP120")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP122")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP125")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP126")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP128")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP131")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP132")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP134")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP137")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP138")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP140")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP143")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP144")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP146")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP149")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP150")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP152")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP155")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP156")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP158")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP161")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP162")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP164")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP167")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP168")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP170")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP173")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP174")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP176")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP178")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP179")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DEP180")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Dirty")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("LastSynchronisation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("License")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AmsId")
                        .IsUnique();

                    b.HasIndex("Key");

                    b.ToTable("DepSparte");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.ImoSparte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AmsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Amsidnr")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTimeOffset?>("Bearbeitet")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Dirty")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IMO101")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO102")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO104")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO105")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO106")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO109")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO110")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO114")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO115")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO116")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO117")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO118")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO119")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO121")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO122")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO123")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO125")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO126")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO127")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO128")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO130")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO131")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IMO132")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("LastSynchronisation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("License")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AmsId")
                        .IsUnique();

                    b.HasIndex("Key");

                    b.ToTable("ImoSparte");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.KrvSparte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AmsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Amsidnr")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTimeOffset?>("Bearbeitet")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Dirty")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("KRV101")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV102")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV103")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV104")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV105")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV106")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV108")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV109")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV110")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV111")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV112")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV113")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV114")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV115")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV116")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV117")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV118")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV119")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV120")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV121")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV122")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV123")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV124")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV125")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV126")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV127")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV128")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV129")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV130")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV132")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV134")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV135")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV136")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV138")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV141")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV143")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV145")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV147")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV149")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV151")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV153")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV155")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV156")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV158")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV159")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV161")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV162")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV164")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV165")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV167")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV168")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV169")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV171")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV172")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV173")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV174")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV177")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV178")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV180")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV181")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV204")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV205")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV206")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV207")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV209")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV214")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV215")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV216")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV217")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV219")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV229")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV239")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV249")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV259")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV260")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV261")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV262")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV263")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV264")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV300")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV301")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV306")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV307")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV308")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV309")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV314")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV315")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV316")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV317")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV324")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV325")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV326")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV327")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV333")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV334")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV335")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV336")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV337")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV343")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV344")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV345")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV346")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("KRV347")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("LastSynchronisation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("License")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AmsId")
                        .IsUnique();

                    b.HasIndex("Key");

                    b.ToTable("KrvSparte");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.Kunde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adrid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("Aenderung")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Aenderungsgrund")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("AmsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Amsidnr")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Bearbeiter")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("Bearbeitet")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("BelegteSparten")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Debitor")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<bool>("Dirty")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DsgvoDeleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DsgvoLockDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DsgvoLocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DtazvEntgelt")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Duzen")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("EintrittsdatumArbeitgeber")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EloGid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("ErlUwg7")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Erloeskonto")
                        .HasColumnType("int");

                    b.Property<string>("Finanzamt")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("GAvwl")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("GB2b")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("GBetriebsart")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("GBetriebsartId")
                        .HasColumnType("int");

                    b.Property<string>("GTarif1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GTarif2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GTarif3")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GTarif4")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GTarif5")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GVstAbzug")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("GVstAnteil")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("GVstSeit")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("GVtAccount")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("GZuschussAltVt")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("GesetzlichKrankenversichert")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("GesetzlichRentenversichert")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("GesetzlicheAltersrenteMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("GesetzlicheAltersrenteMonatlichAbzug")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("GesetzlicheAltersrenteNetto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheAltersrenteNettobetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheAltersrenteProz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheAltersrenteTeil")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheBURenteMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteJahresbetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteNetto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteNettoAbzug")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteNettoZuschuss")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteNettoZuschussProz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteNettobetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteProz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteTeil")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("GewuenschterRentenbeginn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GueltigAb")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GueltigBis")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Handelsregisternummer")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("IdentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("IdentGueltigBis")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdentTyp")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("Inflationsrate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Kapitalmarktzins")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("KinderLautSteuerkarte")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Kindergeldnummer")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Kirchensteuer")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Konto1")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Konto2")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Kontobezeichnung1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Kontobezeichnung2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Kontoinhaber1")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Kontoinhaber2")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("KundeSeit")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Kundenname")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("KundennamePhonetisch")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Kundentyp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Kundenverbindung")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LageBetriebsgrundstuecks")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Land")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Landesname")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LastSynchronisation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LetzterBesuch")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("License")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("LohnGehaltssumme")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("MahnstopBis")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("MaklervertragBis")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("MaklervertragDatum")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Mandant")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MandantAmsidnr")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<decimal?>("MieteNebenkostenMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Mietsteigerung")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("Mitarbeiterzahl")
                        .HasColumnType("int");

                    b.Property<string>("Mobiltelefon")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name2")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name3")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal?>("NichtSelbstaendigeArbeitBruttoMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("NichtSelbstaendigeArbeitNettoMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Ort")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrtPhonetisch")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PAusbildung")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("PAustrittVorag")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("PBefristvt")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("PBefristvtBis")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PBeschaeftignungsverhaeltnis")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PBildung")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PFsbehoerde")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("PFsdatum")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("PFsgueltigab")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PFsnummer")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("PGehaltBbgKranken")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PGehaltBbgRente")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PProbezeit")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("PProbezeitbis")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("PRiester")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PRuerup")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PVorsorge")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PVwl")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("PVwlGenutzt")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("PWochenarbeitszeit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Partner")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<bool?>("Pep")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("PersonalausweisAusstellungsdatum")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PersonalausweisBehoerde")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("PersonalausweisGueltigBis")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PersonalausweisNr")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Personalnummer")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Plz")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<DateTime?>("PraemienrechnungAb")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("PraemienrechnungBis")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Provision")
                        .HasColumnType("int");

                    b.Property<bool?>("Rechexcel")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("RechnungsMail")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Rechtsform")
                        .HasColumnType("longtext");

                    b.Property<string>("Repraesentant")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("S21_F1")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S21_F10")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S21_F2")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S21_F3")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S21_F4")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S21_F5")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S21_F6")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S21_F7")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S21_F8")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S21_F9")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S22_F1")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S22_F10")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S22_F2")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S22_F3")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S22_F4")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S22_F5")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S22_F6")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S22_F7")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S22_F8")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S22_F9")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Sachbearbeiter")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Schlagwoerter")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<decimal?>("SelbstaendigeArbeitNettoMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("SepaSddType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("Sepamandat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Sepamandatsreferenz")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.Property<DateTime?>("StichtagBruttojahresmietwert")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("StichtagBruttojahresumsatz")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("StichtagLohnGehaltssumme")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("StichtagSubunternehmerAuftragswert")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("StichtagSummeEigeneBauvorhaben")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("StichtagWarenMaterialwertProJahr")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("StopAbrechnungBis")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("StopZahlungBis")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Strasse")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StrassePhonetisch")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("SubunternehmerAuftragswert")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SummeEigeneBauvorhaben")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("TaetigAufBetriebsgrundstueckSeit")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Titel")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Trockenbett")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("USTIDNr")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Ueberschwemmungsgebiet")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Umfriedet")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Umsatz")
                        .HasColumnType("int");

                    b.Property<string>("UmsatzJahr")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime?>("Verstorben")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Vm1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vm10")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vm2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vm3")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vm4")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vm5")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vm6")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vm7")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vm8")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vm9")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VnMvertrag")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("VnSepaPreNotificationtAge")
                        .HasColumnType("int");

                    b.Property<string>("Vnnummer")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal?>("WarenMaterialwertProJahr")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("Wasserschutzgebiet")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Zuordnung")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AmsId")
                        .IsUnique();

                    b.ToTable("Kunden");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.KundeFinanzen", b =>
                {
                    b.Property<int>("KundeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Einkommen")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ErwerbsminderungsrenteTeil")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ErwerbsminderungsrenteVoll")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GAgZuschuss")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GAgZuschussProz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlichRentenversichert")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheAltersrenteJahresbetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheAltersrenteMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheAltersrenteMonatlichAbzug")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheAltersrenteNetto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheAltersrenteNettobetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheAltersrenteProz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheAltersrenteTeil")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheBURenteMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteJahresbetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteNetto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteNettoAbzug")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteNettoZuschuss")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteNettoZuschussProz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteNettobetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteProz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheHinterbliebenenRenteTeil")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GesetzlicheKrankenversichert")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Inflationsrate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Kapitalmarktzins")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Kundeninkassokonto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("NichtSelbstaendigeArbeitBruttoMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("NichtSelbstaendigeArbeitNettoMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SelbstaendigeArbeitNettoMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SonstigeAlterseinkuenfteMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SonstigeEinkuenfteNettoMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SonstigeLaufendeKostenMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SubunternehmerAuftragswert")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SummeEigeneBauvorhaben")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("UnterhaltszahlungenMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("WarenMaterialwertProJahr")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("KundeId");

                    b.ToTable("KundenFinanzen");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.KundeKontakt", b =>
                {
                    b.Property<int>("KundeId")
                        .HasColumnType("int");

                    b.Property<string>("Bank1")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Bank2")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Bic1")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Bic2")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Blz1")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Blz2")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("EmailGeschaeftlich")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("EmailPrivat")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Fax")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.Property<string>("Iban1")
                        .HasMaxLength(34)
                        .HasColumnType("varchar(34)");

                    b.Property<string>("Iban2")
                        .HasMaxLength(34)
                        .HasColumnType("varchar(34)");

                    b.Property<string>("Internet")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Konto1")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Konto2")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Kontobezeichnung1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Kontobezeichnung2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Kontoinhaber1")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Kontoinhaber2")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Mobiltelefon")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.Property<string>("TelefonGeschaeftlich")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.Property<string>("TelefonPrivat")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.HasKey("KundeId");

                    b.ToTable("KundenKontakte");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.KundePersonenDetails", b =>
                {
                    b.Property<int>("KundeId")
                        .HasColumnType("int");

                    b.Property<string>("Anrede")
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Arbeitgeber")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal?>("AusbildungskostenMonatlich")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("AustrittsdatumArbeitgeber")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Beruf")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Berufsstatus")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Besitzverhaeltnis")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Bilanzstichtag")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Branche")
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<decimal?>("Bruttojahresmietwert")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Bruttojahresumsatz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Bundesland")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Familienstand")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("GVersicherer1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GVersicherer2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GVersicherer3")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GVersicherer4")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GVersicherer5")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Geburtsname")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Geburtsort")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime?>("Geburtstag")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Geschlecht")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Handelsregisternummer")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Hinterbliebenenrente")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("HistorieZuKunde")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<bool?>("Honorarkunde")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("IdentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("IdentGueltigBis")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdentTyp")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("Inflationsrate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Info_01")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Informationsweg")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("InhaberGF")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InterneNr")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<bool?>("IsHistorie")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsZukunft")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IsoLand")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("KeyIdentDate")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("Kinder")
                        .HasColumnType("int");

                    b.Property<decimal?>("KinderLautSteuerkarte")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Kindergeldnummer")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Kirchensteuer")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Klasse")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Sozialversicherungsnummer")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Staatsangehoerigkeit")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Status")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("SteuerIdentifikationsnummer")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Steuerklasse")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Steuernummer")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("Verstorben")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Vorname")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<bool?>("Wasserschutzgebiet")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Zuordnung")
                        .HasColumnType("longtext");

                    b.HasKey("KundeId");

                    b.ToTable("KundenPersonenDetails");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.Vertrag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Abbuchung")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("AblaufDt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("AmsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Amsidnr")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("Bearbeitet")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ComputedStatus")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Details")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<bool>("Dirty")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("LastSynchronisation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("License")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Sparte")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Vu")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int>("VuNummer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmsId")
                        .IsUnique();

                    b.HasIndex("Key");

                    b.ToTable("Vertraege");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.VertragBank", b =>
                {
                    b.Property<int>("VertragId")
                        .HasColumnType("int");

                    b.Property<string>("Bic")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Blz")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Iban")
                        .HasMaxLength(34)
                        .HasColumnType("varchar(34)");

                    b.Property<string>("Konto")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Kontobezeichnung")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("VertragId");

                    b.ToTable("VertragBanken");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.VertragDetails", b =>
                {
                    b.Property<int>("VertragId")
                        .HasColumnType("int");

                    b.Property<string>("AbrInfo")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Abschlussvermittler")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AendGrund")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Anfrage")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Angebot")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("AnpassungAm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Antrag")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("AnzahlZahlungenProJahr")
                        .HasColumnType("int");

                    b.Property<int?>("Anzcourtzahlung")
                        .HasColumnType("int");

                    b.Property<string>("ApInfo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Art")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Berater")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("BeratungErforderlich")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Beratungsgebiet")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Beschreibung")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("Bestaetigung")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Beteiligungsverhaeltnis")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BetreuungsvertragsNr")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("BezugAppro1")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugAppro10")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugAppro2")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugAppro3")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugAppro4")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugAppro5")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugAppro6")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugAppro7")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugAppro8")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugAppro9")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugApzvpro1")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugApzvpro10")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugApzvpro2")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugApzvpro3")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugApzvpro4")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugApzvpro5")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugApzvpro6")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugApzvpro7")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugApzvpro8")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugApzvpro9")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugDypro1")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugDypro10")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugDypro2")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugDypro3")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugDypro4")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugDypro5")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugDypro6")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugDypro7")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugDypro8")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugDypro9")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugVmpro1")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugVmpro10")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugVmpro2")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugVmpro3")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugVmpro4")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugVmpro5")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugVmpro6")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugVmpro7")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugVmpro8")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BezugVmpro9")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("Bimonthvalue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("BisherigeJahresNettoPraemie")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Bonusbetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("Bonuseingang")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("BruttoVertrag")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("BruttopraemieGemaessZahlweise")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("BuchenAutomatisch")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Cbc")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Ccxid")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Ccximport")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<bool?>("CourtManuell")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("CourtageAb")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CourtageBezugsgroesseFormel")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CourtageBis")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("CourtageFormelBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("CourtageProzent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CourtageZahlweise")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal?>("Courtagesplit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("CourtagesplitBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Courtformelbetragzv")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Courtformelzv")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("Courtprozzv")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Courtprozzvb")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("DeckungBis")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeckungVon")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Defzeit")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Dyvm1")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Dyvm10")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Dyvm2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Dyvm3")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Dyvm4")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Dyvm5")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Dyvm6")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Dyvm7")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Dyvm8")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Dyvm9")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("EinzelpraemienErfassen")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("EloGid")
                        .HasMaxLength(38)
                        .HasColumnType("varchar(38)");

                    b.Property<int?>("Erloeskonto")
                        .HasColumnType("int");

                    b.Property<string>("Extid")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("FNettoJPraemie")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("FPoliceGeprueft")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("FPoliceVorhanden")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Faellig")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FeeArt")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("FeeBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("FeeJahresZahlBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("FeePraemie")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("FeeProz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("FeeProzB")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("FeeProzV")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("FestwertPraemieVom")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Fronter")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FrontingPolice")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GdvDatenVom")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("GdvIgnore")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("GebuehrNetto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GebuehrZw")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("GekuendWv")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GekuendigtVon")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Gesellschaft")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gevo")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("Gevoid")
                        .HasColumnType("int");

                    b.Property<string>("HaftungMakler")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HaftungVm1")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HaftungVm10")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HaftungVm2")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HaftungVm3")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HaftungVm4")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HaftungVm5")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HaftungVm6")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HaftungVm7")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HaftungVm8")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HaftungVm9")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("HatFestwertBeteiligung")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("InvitatioDatum")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsHistorie")
                        .IsRequired()
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsJPraemie")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsKorrespondenzMakler")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("Jahrescourtage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Kickback")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("KickbackBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Kommakler")
                        .HasColumnType("longtext");

                    b.Property<string>("Kommentar")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Komvers")
                        .HasColumnType("longtext");

                    b.Property<string>("Konto")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Kontobezeichnung")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("KorrespondenzMaklerBis")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Kostenstelle")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Kuendigung")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LetzeAnfrage")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LetzteFaelligkeit")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("LetzteNettopraemie")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("LetzteProvision")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("LetzterNachtrag")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("LokalCourtage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("LokalCourtageBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("LokalFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("LokalFeeBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("LokalMahnDatum")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LokalPolice")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("LokalSteuer")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("LokalSteuerBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("LtFaelligBis")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("LtPraemiebrutto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("MPraemieFronting")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("MahnstopBis")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("MaklerFuehrtVersSteuerAb")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Matchcode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("MindestJahresNettopraermie")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ModellVmprovis")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NVnr")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("NachtragNr")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NedVstCheck")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<bool?>("Nettoisiert")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("NonAdmittedFinc")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("Overrider")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("OverriderBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Parentid")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Pricing")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Produkt")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Produktgruppe")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProduktgruppeId")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ProviMaxAp")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ProviMaxDy")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ProviMaxFp")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ProvisMonat")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ProvisTag")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime?>("Provisionsreferenzdatum")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Prtausschluss")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("RGDruckstop")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RVKumulnr")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("RVRelKumulsumme")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("RVRelSumme")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Rabatt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("RechnungAnNl")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RechnungFwDatum")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("RechnungsMail")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Renta")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RisikoAllgemein")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RisikoOrt")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("RisikoPlz")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RisikoStrasse")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Risikotraeger")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Rvart")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Rvnummer")
                        .HasColumnType("int");

                    b.Property<string>("S2_01")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_02")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_03")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_04")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_05")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_06")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_07")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_08")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_09")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_10")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_11")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_12")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("S2_13")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("SEPAEinzugsmandat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SEPAMandatsreferenz")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.Property<string>("Sachbearbeiter")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("SammelVtId")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<bool?>("Sammelvertrag")
                        .IsRequired()
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Sammelvertragsnr")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("SchadenBetJaNein")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Schlagwoerter")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("SchwebeZuVertrag")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("SepaSddType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("Sicherungsschein")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Sourceid")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal?>("SpartenCounter")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("SpartenberechnAufschub")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("SpartenberechnungAus")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("SperrdatumVUAbrechnung")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StandNr")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("StatCharges")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("StatChargesBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Statpolice")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StatpoliceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Statpraemie")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StatpraemieDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Statusgrund")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("StopAbrechnungBis")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("StopZahlungBis")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Storno")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("StornoVm1")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("StornoVm10")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("StornoVm2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("StornoVm3")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("StornoVm4")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("StornoVm5")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("StornoVm6")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("StornoVm7")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("StornoVm8")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("StornoVm9")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Stornoges")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("Stornohaft")
                        .HasColumnType("int");

                    b.Property<decimal?>("Sumbuildings")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Sumcontents")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Sumpd")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Sumstocks")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ZPraemie")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ZQuote")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("Zugangsdatum")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ZugangsdatumJjjj")
                        .HasColumnType("int");

                    b.Property<int?>("ZugangsdatumJjjjmm")
                        .HasColumnType("int");

                    b.Property<string>("Zuordnung")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.HasKey("VertragId");

                    b.ToTable("VertragDetails");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.VertragFinanzen", b =>
                {
                    b.Property<int>("VertragId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ApBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("ApBuchungsdatum")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("BwSumme")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Bwsummezv")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("DifferenzCourtage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("DifferenzCourtageBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("EffektivcourtageProzent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Jahrespraemie")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Jahressteuerbetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PraemieNetto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ProgrammCourtage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ProgrammCourtageBetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Steuer")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SteuerZw")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Zuschlagbetrag")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ZuschlagbetragZw")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("VertragId");

                    b.ToTable("VertragFinanzen");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.VertragHistorie", b =>
                {
                    b.Property<int>("VertragId")
                        .HasColumnType("int");

                    b.Property<string>("HistorieZuVertrag")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("Historiendatum")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Historiengrund")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("HonorarVm1")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HonorarVm10")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HonorarVm2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HonorarVm3")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HonorarVm4")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HonorarVm5")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HonorarVm6")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HonorarVm7")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HonorarVm8")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HonorarVm9")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("HpvGruppe")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Hpvahb")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("VertragId");

                    b.ToTable("VertragHistorien");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.DepSparte", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Vertrag", null)
                        .WithMany()
                        .HasForeignKey("Key")
                        .HasPrincipalKey("Amsidnr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.ImoSparte", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Vertrag", null)
                        .WithMany()
                        .HasForeignKey("Key")
                        .HasPrincipalKey("Amsidnr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.KrvSparte", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Vertrag", null)
                        .WithMany()
                        .HasForeignKey("Key")
                        .HasPrincipalKey("Amsidnr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.KundeFinanzen", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Kunde", "Kunde")
                        .WithOne("Finanzen")
                        .HasForeignKey("Assfinet.Shared.Entities.KundeFinanzen", "KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.KundeKontakt", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Kunde", "Kunde")
                        .WithOne("Kontakt")
                        .HasForeignKey("Assfinet.Shared.Entities.KundeKontakt", "KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.KundePersonenDetails", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Kunde", "Kunde")
                        .WithOne("PersonenDetails")
                        .HasForeignKey("Assfinet.Shared.Entities.KundePersonenDetails", "KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.Vertrag", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Kunde", "Kunde")
                        .WithMany("Vertraege")
                        .HasForeignKey("Key")
                        .HasPrincipalKey("Amsidnr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.VertragBank", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Vertrag", "Vertrag")
                        .WithOne("BankDetails")
                        .HasForeignKey("Assfinet.Shared.Entities.VertragBank", "VertragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vertrag");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.VertragDetails", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Vertrag", "Vertrag")
                        .WithOne("VertragDetails")
                        .HasForeignKey("Assfinet.Shared.Entities.VertragDetails", "VertragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vertrag");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.VertragFinanzen", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Vertrag", "Vertrag")
                        .WithOne("Finanzen")
                        .HasForeignKey("Assfinet.Shared.Entities.VertragFinanzen", "VertragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vertrag");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.VertragHistorie", b =>
                {
                    b.HasOne("Assfinet.Shared.Entities.Vertrag", "Vertrag")
                        .WithOne("Historie")
                        .HasForeignKey("Assfinet.Shared.Entities.VertragHistorie", "VertragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vertrag");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.Kunde", b =>
                {
                    b.Navigation("Finanzen")
                        .IsRequired();

                    b.Navigation("Kontakt")
                        .IsRequired();

                    b.Navigation("PersonenDetails")
                        .IsRequired();

                    b.Navigation("Vertraege");
                });

            modelBuilder.Entity("Assfinet.Shared.Entities.Vertrag", b =>
                {
                    b.Navigation("BankDetails")
                        .IsRequired();

                    b.Navigation("Finanzen")
                        .IsRequired();

                    b.Navigation("Historie")
                        .IsRequired();

                    b.Navigation("VertragDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
